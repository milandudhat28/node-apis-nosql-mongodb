Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `id`, `firstName`, `middleName`, `lastName`, `dateOfBirth`, `gender`, `maritalStatus`, `spouseName`, `bloodGroup`, `employeeId`, `password`, `employeeImage`, `isActive`, `status`, `detailsUpdateProof`, `employeeEditProof`, `roleId`, `github`, `portfolioWebsite`, `createdDate`, `updatedDate`, `deletedDate` FROM `Employees` AS `Employees` WHERE (`Employees`.`deletedDate` IS NULL AND (`Employees`.`status` = 'employee' AND `Employees`.`employeeId` = 'CCCEMP0018')) LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'contact' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) LIMIT 1;
Executing (default): UPDATE `EmployeeAppLogs` SET `isVisible`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND (`employeeId` = ? AND `requestStatus` = ? AND `requestType` = ?))
Executing (default): INSERT INTO `EmployeeAppLogs` (`id`,`requestDate`,`requestType`,`requestData`,`requestBy`,`requestStatus`,`employeeId`,`appVersion`,`appOS`,`createdDate`,`updatedDate`) VALUES (DEFAULT,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (0bef3ce9-a93c-4799-a83b-559afbc292b2): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '889');
Executing (0bef3ce9-a93c-4799-a83b-559afbc292b2): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Executing (default): UPDATE `EmployeeContactDetails` SET `id`=?,`skype`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `employeeId` = ?)
Executing (default): SELECT `id`, `firstName`, `middleName`, `lastName`, `dateOfBirth`, `gender`, `maritalStatus`, `spouseName`, `bloodGroup`, `employeeId`, `password`, `employeeImage`, `isActive`, `status`, `detailsUpdateProof`, `employeeEditProof`, `roleId`, `github`, `portfolioWebsite`, `createdDate`, `updatedDate`, `deletedDate` FROM `Employees` AS `Employees` WHERE (`Employees`.`deletedDate` IS NULL AND (`Employees`.`status` = 'employee' AND `Employees`.`employeeId` = 'CCCEMP0018')) LIMIT 1;
Executing (default): SELECT `id`, `firstName`, `lastName`, `middleName`, `dateOfBirth`, `gender`, `bloodGroup`, `maritalStatus`, `employeeImage`, `employeeEditProof`, `spouseName` FROM `Employees` AS `Employees` WHERE (`Employees`.`deletedDate` IS NULL AND `Employees`.`id` = 18);
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'personal' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'personal' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `contactNumber`, `alternateContactNumber`, `companyEmail`, `personalEmail`, `linkedIn`, `skype`, `companySkype`, `emergencyContactName`, `relationWithEmployee`, `emergencyContactNumber`, `employeeId` FROM `EmployeeContactDetails` AS `EmployeeContactDetails` WHERE (`EmployeeContactDetails`.`deletedDate` IS NULL AND `EmployeeContactDetails`.`employeeId` = 18) LIMIT 1;
Executing (default): SELECT `id`, `type`, `email`, `employeeId`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeEmails` AS `EmployeeEmails` WHERE (`EmployeeEmails`.`deletedDate` IS NULL AND `EmployeeEmails`.`employeeId` = 18);
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'contact' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'contact' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `presentStreetLine1`, `presentStreetLine2`, `presentCountry`, `presentState`, `presentCity`, `presentArea`, `presentZipCode`, `permenentStreetLine1`, `permenentStreetLine2`, `permenentCountry`, `permenentState`, `permenentCity`, `permenentArea`, `permenentZipCode`, `employeeId`, `editPresentAddressProof`, `editPermanentAddressProof` FROM `EmployeeAddresses` AS `EmployeeAddresses` WHERE (`EmployeeAddresses`.`deletedDate` IS NULL AND `EmployeeAddresses`.`employeeId` = 18) LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'address' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'address' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `EmployeeEducations`.`id`, `EmployeeEducations`.`educationTypeId`, `EmployeeEducations`.`courseId`, `EmployeeEducations`.`instituteName`, `EmployeeEducations`.`instituteId`, `EmployeeEducations`.`percentage`, `EmployeeEducations`.`passingYear`, `institute`.`id` AS `institute.id`, `institute`.`collegeName` AS `institute.instituteName`, `educationtype`.`id` AS `educationtype.id`, `educationtype`.`title` AS `educationtype.title`, `course`.`id` AS `course.id`, `course`.`title` AS `course.title` FROM `EmployeeEducations` AS `EmployeeEducations` LEFT OUTER JOIN `CollegeMaster` AS `institute` ON `EmployeeEducations`.`instituteId` = `institute`.`id` AND (`institute`.`deletedDate` IS NULL) LEFT OUTER JOIN `EducationTypeMaster` AS `educationtype` ON `EmployeeEducations`.`educationTypeId` = `educationtype`.`id` AND (`educationtype`.`deletedDate` IS NULL) LEFT OUTER JOIN `CourseMaster` AS `course` ON `EmployeeEducations`.`courseId` = `course`.`id` AND (`course`.`deletedDate` IS NULL) WHERE (`EmployeeEducations`.`deletedDate` IS NULL AND `EmployeeEducations`.`employeeId` = 18);
Executing (default): SELECT `EmployeeAdditionalCourses`.`id`, `EmployeeAdditionalCourses`.`courseName`, `EmployeeAdditionalCourses`.`instituteName`, `EmployeeAdditionalCourses`.`certificateFile`, `EmployeeAdditionalCourses`.`certificateUrl`, `technologies`.`id` AS `technologies.id`, `technologies`.`additionalCourseId` AS `technologies.additionalCourseId`, `technologies`.`technologyId` AS `technologies.technologyId`, `technologies`.`createdDate` AS `technologies.createdDate`, `technologies`.`updatedDate` AS `technologies.updatedDate`, `technologies`.`deletedDate` AS `technologies.deletedDate`, `technologies->technology`.`id` AS `technologies.technology.id`, `technologies->technology`.`title` AS `technologies.technology.title`, `technologies->technology`.`isActive` AS `technologies.technology.isActive`, `technologies->technology`.`deletedDate` AS `technologies.technology.deletedDate`, `technologies->technology`.`createdDate` AS `technologies.technology.createdDate`, `technologies->technology`.`updatedDate` AS `technologies.technology.updatedDate` FROM `EmployeeAdditionalCourses` AS `EmployeeAdditionalCourses` LEFT OUTER JOIN `EmployeeAdditionalCourseSkills` AS `technologies` ON `EmployeeAdditionalCourses`.`id` = `technologies`.`additionalCourseId` AND (`technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `SkillMaster` AS `technologies->technology` ON `technologies`.`technologyId` = `technologies->technology`.`id` AND (`technologies->technology`.`deletedDate` IS NULL) WHERE (`EmployeeAdditionalCourses`.`deletedDate` IS NULL AND `EmployeeAdditionalCourses`.`employeeId` = 18);
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'education' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'education' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `EmployeeWorkDetails`.`id`, `EmployeeWorkDetails`.`joiningDate`, `EmployeeWorkDetails`.`reJoiningDate`, `EmployeeWorkDetails`.`productionDate`, `EmployeeWorkDetails`.`commitmentStartDate`, `EmployeeWorkDetails`.`teamLead`, `EmployeeWorkDetails`.`projectManager`, `EmployeeWorkDetails`.`bondDuration`, `EmployeeWorkDetails`.`noticePeriod`, `EmployeeWorkDetails`.`resignationDate`, `EmployeeWorkDetails`.`resignationAcceptanceDate`, `EmployeeWorkDetails`.`relievingDate`, `EmployeeWorkDetails`.`appraisalCycle`, `EmployeeWorkDetails`.`employeeType`, `EmployeeWorkDetails`.`technologyId`, `EmployeeWorkDetails`.`designationId`, `EmployeeWorkDetails`.`employeeId`, `designation`.`id` AS `designation.id`, `designation`.`title` AS `designation.title`, `technology`.`id` AS `technology.id`, `technology`.`title` AS `technology.title`, `teamLeadName`.`id` AS `teamLeadName.id`, `teamLeadName`.`firstName` AS `teamLeadName.firstName`, `teamLeadName`.`lastName` AS `teamLeadName.lastName`, `projectManagerName`.`id` AS `projectManagerName.id`, `projectManagerName`.`firstName` AS `projectManagerName.firstName`, `projectManagerName`.`lastName` AS `projectManagerName.lastName` FROM `EmployeeWorkDetails` AS `EmployeeWorkDetails` LEFT OUTER JOIN `DesignationMaster` AS `designation` ON `EmployeeWorkDetails`.`designationId` = `designation`.`id` AND (`designation`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `technology` ON `EmployeeWorkDetails`.`technologyId` = `technology`.`id` AND (`technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `Employees` AS `teamLeadName` ON `EmployeeWorkDetails`.`teamLead` = `teamLeadName`.`id` AND (`teamLeadName`.`deletedDate` IS NULL) LEFT OUTER JOIN `Employees` AS `projectManagerName` ON `EmployeeWorkDetails`.`projectManager` = `projectManagerName`.`id` AND (`projectManagerName`.`deletedDate` IS NULL) WHERE (`EmployeeWorkDetails`.`deletedDate` IS NULL AND `EmployeeWorkDetails`.`employeeId` = 18) LIMIT 1;
Executing (default): SELECT `EmployeeDepartments`.`id`, `EmployeeDepartments`.`departmentId`, `department`.`id` AS `department.id`, `department`.`title` AS `department.title` FROM `EmployeeDepartments` AS `EmployeeDepartments` LEFT OUTER JOIN `DepartmentMaster` AS `department` ON `EmployeeDepartments`.`departmentId` = `department`.`id` AND (`department`.`deletedDate` IS NULL) WHERE (`EmployeeDepartments`.`deletedDate` IS NULL AND `EmployeeDepartments`.`employeeId` = 18);
Executing (default): SELECT `EmployeeExperiences`.`id`, `EmployeeExperiences`.`designation`, `EmployeeExperiences`.`from`, `EmployeeExperiences`.`to`, `EmployeeExperiences`.`reasonForJobChange`, `EmployeeExperiences`.`employeeId`, `EmployeeExperiences`.`companyId`, `EmployeeExperiences`.`createdDate`, `EmployeeExperiences`.`updatedDate`, `EmployeeExperiences`.`deletedDate`, `technologies`.`id` AS `technologies.id`, `technologies`.`employeeExperienceId` AS `technologies.employeeExperienceId`, `technologies`.`technologyId` AS `technologies.technologyId`, `technologies`.`createdDate` AS `technologies.createdDate`, `technologies`.`updatedDate` AS `technologies.updatedDate`, `technologies`.`deletedDate` AS `technologies.deletedDate`, `technologies->technology`.`id` AS `technologies.technology.id`, `technologies->technology`.`title` AS `technologies.technology.title`, `technologies->technology`.`parentId` AS `technologies.technology.parentId`, `technologies->technology`.`isActive` AS `technologies.technology.isActive`, `technologies->technology`.`deletedDate` AS `technologies.technology.deletedDate`, `technologies->technology`.`createdDate` AS `technologies.technology.createdDate`, `technologies->technology`.`updatedDate` AS `technologies.technology.updatedDate`, `company`.`id` AS `company.id`, `company`.`name` AS `company.name`, `reasonForJobChangeName`.`id` AS `reasonForJobChangeName.id`, `reasonForJobChangeName`.`title` AS `reasonForJobChangeName.title` FROM `EmployeeExperiences` AS `EmployeeExperiences` LEFT OUTER JOIN `EmployeeExpTechnologies` AS `technologies` ON `EmployeeExperiences`.`id` = `technologies`.`employeeExperienceId` AND (`technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `technologies->technology` ON `technologies`.`technologyId` = `technologies->technology`.`id` AND (`technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `company` ON `EmployeeExperiences`.`companyId` = `company`.`id` AND (`company`.`deletedDate` IS NULL) LEFT OUTER JOIN `JobChangeReasonMaster` AS `reasonForJobChangeName` ON `EmployeeExperiences`.`reasonForJobChange` = `reasonForJobChangeName`.`id` AND (`reasonForJobChangeName`.`deletedDate` IS NULL) WHERE (`EmployeeExperiences`.`deletedDate` IS NULL AND `EmployeeExperiences`.`employeeId` = 18);
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'work-experience' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'work-experience' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `name`, `dob`, `maritalStatus`, `email`, `mobileNumber`, `UAN`, `passportNumber`, `passportValidityTo`, `bankAccountNumber`, `IFSC`, `aadharNumber`, `panNumber`, `employeeId`, `underPF`, `underESIC`, `presentAddress`, `permanentAddress`, `fatherName`, `fatherDOB`, `motherName`, `motherDOB`, `bankName`, `husbandName`, `husbandDOB`, `electionCardNumber`, `licenseNumber`, `licenseValidityTo`, `rationCardNumber`, `memberId`, `esicNumber`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeePF` AS `EmployeePF` WHERE (`EmployeePF`.`deletedDate` IS NULL AND `EmployeePF`.`employeeId` = 18) LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'pf-esic' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'pf-esic' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `firstName`, `middleName`, `lastName`, `dateOfBirth`, `gender`, `maritalStatus`, `spouseName`, `bloodGroup`, `employeeId`, `password`, `employeeImage`, `isActive`, `status`, `detailsUpdateProof`, `employeeEditProof`, `roleId`, `github`, `portfolioWebsite`, `createdDate`, `updatedDate`, `deletedDate` FROM `Employees` AS `Employees` WHERE (`Employees`.`deletedDate` IS NULL AND (`Employees`.`status` = 'employee' AND `Employees`.`employeeId` = 'CCCEMP0018')) LIMIT 1;
Executing (default): SELECT `id`, `firstName`, `lastName`, `middleName`, `dateOfBirth`, `gender`, `bloodGroup`, `maritalStatus`, `employeeImage`, `employeeEditProof`, `spouseName` FROM `Employees` AS `Employees` WHERE (`Employees`.`deletedDate` IS NULL AND `Employees`.`id` = 18);
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'personal' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'personal' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `contactNumber`, `alternateContactNumber`, `companyEmail`, `personalEmail`, `linkedIn`, `skype`, `companySkype`, `emergencyContactName`, `relationWithEmployee`, `emergencyContactNumber`, `employeeId` FROM `EmployeeContactDetails` AS `EmployeeContactDetails` WHERE (`EmployeeContactDetails`.`deletedDate` IS NULL AND `EmployeeContactDetails`.`employeeId` = 18) LIMIT 1;
Executing (default): SELECT `id`, `type`, `email`, `employeeId`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeEmails` AS `EmployeeEmails` WHERE (`EmployeeEmails`.`deletedDate` IS NULL AND `EmployeeEmails`.`employeeId` = 18);
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'contact' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'contact' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `presentStreetLine1`, `presentStreetLine2`, `presentCountry`, `presentState`, `presentCity`, `presentArea`, `presentZipCode`, `permenentStreetLine1`, `permenentStreetLine2`, `permenentCountry`, `permenentState`, `permenentCity`, `permenentArea`, `permenentZipCode`, `employeeId`, `editPresentAddressProof`, `editPermanentAddressProof` FROM `EmployeeAddresses` AS `EmployeeAddresses` WHERE (`EmployeeAddresses`.`deletedDate` IS NULL AND `EmployeeAddresses`.`employeeId` = 18) LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'address' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'address' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `EmployeeEducations`.`id`, `EmployeeEducations`.`educationTypeId`, `EmployeeEducations`.`courseId`, `EmployeeEducations`.`instituteName`, `EmployeeEducations`.`instituteId`, `EmployeeEducations`.`percentage`, `EmployeeEducations`.`passingYear`, `institute`.`id` AS `institute.id`, `institute`.`collegeName` AS `institute.instituteName`, `educationtype`.`id` AS `educationtype.id`, `educationtype`.`title` AS `educationtype.title`, `course`.`id` AS `course.id`, `course`.`title` AS `course.title` FROM `EmployeeEducations` AS `EmployeeEducations` LEFT OUTER JOIN `CollegeMaster` AS `institute` ON `EmployeeEducations`.`instituteId` = `institute`.`id` AND (`institute`.`deletedDate` IS NULL) LEFT OUTER JOIN `EducationTypeMaster` AS `educationtype` ON `EmployeeEducations`.`educationTypeId` = `educationtype`.`id` AND (`educationtype`.`deletedDate` IS NULL) LEFT OUTER JOIN `CourseMaster` AS `course` ON `EmployeeEducations`.`courseId` = `course`.`id` AND (`course`.`deletedDate` IS NULL) WHERE (`EmployeeEducations`.`deletedDate` IS NULL AND `EmployeeEducations`.`employeeId` = 18);
Executing (default): SELECT `EmployeeAdditionalCourses`.`id`, `EmployeeAdditionalCourses`.`courseName`, `EmployeeAdditionalCourses`.`instituteName`, `EmployeeAdditionalCourses`.`certificateFile`, `EmployeeAdditionalCourses`.`certificateUrl`, `technologies`.`id` AS `technologies.id`, `technologies`.`additionalCourseId` AS `technologies.additionalCourseId`, `technologies`.`technologyId` AS `technologies.technologyId`, `technologies`.`createdDate` AS `technologies.createdDate`, `technologies`.`updatedDate` AS `technologies.updatedDate`, `technologies`.`deletedDate` AS `technologies.deletedDate`, `technologies->technology`.`id` AS `technologies.technology.id`, `technologies->technology`.`title` AS `technologies.technology.title`, `technologies->technology`.`isActive` AS `technologies.technology.isActive`, `technologies->technology`.`deletedDate` AS `technologies.technology.deletedDate`, `technologies->technology`.`createdDate` AS `technologies.technology.createdDate`, `technologies->technology`.`updatedDate` AS `technologies.technology.updatedDate` FROM `EmployeeAdditionalCourses` AS `EmployeeAdditionalCourses` LEFT OUTER JOIN `EmployeeAdditionalCourseSkills` AS `technologies` ON `EmployeeAdditionalCourses`.`id` = `technologies`.`additionalCourseId` AND (`technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `SkillMaster` AS `technologies->technology` ON `technologies`.`technologyId` = `technologies->technology`.`id` AND (`technologies->technology`.`deletedDate` IS NULL) WHERE (`EmployeeAdditionalCourses`.`deletedDate` IS NULL AND `EmployeeAdditionalCourses`.`employeeId` = 18);
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'education' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'education' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `EmployeeWorkDetails`.`id`, `EmployeeWorkDetails`.`joiningDate`, `EmployeeWorkDetails`.`reJoiningDate`, `EmployeeWorkDetails`.`productionDate`, `EmployeeWorkDetails`.`commitmentStartDate`, `EmployeeWorkDetails`.`teamLead`, `EmployeeWorkDetails`.`projectManager`, `EmployeeWorkDetails`.`bondDuration`, `EmployeeWorkDetails`.`noticePeriod`, `EmployeeWorkDetails`.`resignationDate`, `EmployeeWorkDetails`.`resignationAcceptanceDate`, `EmployeeWorkDetails`.`relievingDate`, `EmployeeWorkDetails`.`appraisalCycle`, `EmployeeWorkDetails`.`employeeType`, `EmployeeWorkDetails`.`technologyId`, `EmployeeWorkDetails`.`designationId`, `EmployeeWorkDetails`.`employeeId`, `designation`.`id` AS `designation.id`, `designation`.`title` AS `designation.title`, `technology`.`id` AS `technology.id`, `technology`.`title` AS `technology.title`, `teamLeadName`.`id` AS `teamLeadName.id`, `teamLeadName`.`firstName` AS `teamLeadName.firstName`, `teamLeadName`.`lastName` AS `teamLeadName.lastName`, `projectManagerName`.`id` AS `projectManagerName.id`, `projectManagerName`.`firstName` AS `projectManagerName.firstName`, `projectManagerName`.`lastName` AS `projectManagerName.lastName` FROM `EmployeeWorkDetails` AS `EmployeeWorkDetails` LEFT OUTER JOIN `DesignationMaster` AS `designation` ON `EmployeeWorkDetails`.`designationId` = `designation`.`id` AND (`designation`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `technology` ON `EmployeeWorkDetails`.`technologyId` = `technology`.`id` AND (`technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `Employees` AS `teamLeadName` ON `EmployeeWorkDetails`.`teamLead` = `teamLeadName`.`id` AND (`teamLeadName`.`deletedDate` IS NULL) LEFT OUTER JOIN `Employees` AS `projectManagerName` ON `EmployeeWorkDetails`.`projectManager` = `projectManagerName`.`id` AND (`projectManagerName`.`deletedDate` IS NULL) WHERE (`EmployeeWorkDetails`.`deletedDate` IS NULL AND `EmployeeWorkDetails`.`employeeId` = 18) LIMIT 1;
Executing (default): SELECT `EmployeeDepartments`.`id`, `EmployeeDepartments`.`departmentId`, `department`.`id` AS `department.id`, `department`.`title` AS `department.title` FROM `EmployeeDepartments` AS `EmployeeDepartments` LEFT OUTER JOIN `DepartmentMaster` AS `department` ON `EmployeeDepartments`.`departmentId` = `department`.`id` AND (`department`.`deletedDate` IS NULL) WHERE (`EmployeeDepartments`.`deletedDate` IS NULL AND `EmployeeDepartments`.`employeeId` = 18);
Executing (default): SELECT `EmployeeExperiences`.`id`, `EmployeeExperiences`.`designation`, `EmployeeExperiences`.`from`, `EmployeeExperiences`.`to`, `EmployeeExperiences`.`reasonForJobChange`, `EmployeeExperiences`.`employeeId`, `EmployeeExperiences`.`companyId`, `EmployeeExperiences`.`createdDate`, `EmployeeExperiences`.`updatedDate`, `EmployeeExperiences`.`deletedDate`, `technologies`.`id` AS `technologies.id`, `technologies`.`employeeExperienceId` AS `technologies.employeeExperienceId`, `technologies`.`technologyId` AS `technologies.technologyId`, `technologies`.`createdDate` AS `technologies.createdDate`, `technologies`.`updatedDate` AS `technologies.updatedDate`, `technologies`.`deletedDate` AS `technologies.deletedDate`, `technologies->technology`.`id` AS `technologies.technology.id`, `technologies->technology`.`title` AS `technologies.technology.title`, `technologies->technology`.`parentId` AS `technologies.technology.parentId`, `technologies->technology`.`isActive` AS `technologies.technology.isActive`, `technologies->technology`.`deletedDate` AS `technologies.technology.deletedDate`, `technologies->technology`.`createdDate` AS `technologies.technology.createdDate`, `technologies->technology`.`updatedDate` AS `technologies.technology.updatedDate`, `company`.`id` AS `company.id`, `company`.`name` AS `company.name`, `reasonForJobChangeName`.`id` AS `reasonForJobChangeName.id`, `reasonForJobChangeName`.`title` AS `reasonForJobChangeName.title` FROM `EmployeeExperiences` AS `EmployeeExperiences` LEFT OUTER JOIN `EmployeeExpTechnologies` AS `technologies` ON `EmployeeExperiences`.`id` = `technologies`.`employeeExperienceId` AND (`technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `technologies->technology` ON `technologies`.`technologyId` = `technologies->technology`.`id` AND (`technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `company` ON `EmployeeExperiences`.`companyId` = `company`.`id` AND (`company`.`deletedDate` IS NULL) LEFT OUTER JOIN `JobChangeReasonMaster` AS `reasonForJobChangeName` ON `EmployeeExperiences`.`reasonForJobChange` = `reasonForJobChangeName`.`id` AND (`reasonForJobChangeName`.`deletedDate` IS NULL) WHERE (`EmployeeExperiences`.`deletedDate` IS NULL AND `EmployeeExperiences`.`employeeId` = 18);
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'work-experience' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'work-experience' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `name`, `dob`, `maritalStatus`, `email`, `mobileNumber`, `UAN`, `passportNumber`, `passportValidityTo`, `bankAccountNumber`, `IFSC`, `aadharNumber`, `panNumber`, `employeeId`, `underPF`, `underESIC`, `presentAddress`, `permanentAddress`, `fatherName`, `fatherDOB`, `motherName`, `motherDOB`, `bankName`, `husbandName`, `husbandDOB`, `electionCardNumber`, `licenseNumber`, `licenseValidityTo`, `rationCardNumber`, `memberId`, `esicNumber`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeePF` AS `EmployeePF` WHERE (`EmployeePF`.`deletedDate` IS NULL AND `EmployeePF`.`employeeId` = 18) LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'pf-esic' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'pf-esic' AND `EmployeeAppLogs`.`requestStatus` = 'REJECTED' AND `EmployeeAppLogs`.`isVisible` != 1 AND `EmployeeAppLogs`.`employeeId` = 18)) ORDER BY `EmployeeAppLogs`.`id` DESC LIMIT 1;
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (b5a0a6ab-7c6c-4ca4-86dd-32fba76e748a): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (b5a0a6ab-7c6c-4ca4-86dd-32fba76e748a): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (b1f3ee46-94c9-4c52-bfe0-788e991f29e8): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (b1f3ee46-94c9-4c52-bfe0-788e991f29e8): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (00d1f862-476e-44da-b45f-e1d57f9915cb): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (00d1f862-476e-44da-b45f-e1d57f9915cb): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (e0d040e6-0c51-4215-b86c-67b3573549ee): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (e0d040e6-0c51-4215-b86c-67b3573549ee): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (636c5bfb-66ed-46ef-9ded-bf0b8851555e): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (636c5bfb-66ed-46ef-9ded-bf0b8851555e): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (285cec8a-b5b7-465f-bab6-e0a74e85215e): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (285cec8a-b5b7-465f-bab6-e0a74e85215e): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (03920b5e-416f-4181-a5ad-49aa0eadb2f2): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (03920b5e-416f-4181-a5ad-49aa0eadb2f2): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (1695b447-c649-4391-8425-ede78a5ee338): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (1695b447-c649-4391-8425-ede78a5ee338): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Executing (default): UPDATE `EmployeeContactDetails` SET `id`=?,`skype`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `employeeId` = ?)
Executing (default): SELECT `id`, `firstName`, `middleName`, `lastName`, `dateOfBirth`, `gender`, `maritalStatus`, `spouseName`, `bloodGroup`, `employeeId`, `password`, `employeeImage`, `isActive`, `status`, `detailsUpdateProof`, `employeeEditProof`, `roleId`, `github`, `portfolioWebsite`, `createdDate`, `updatedDate`, `deletedDate` FROM `Employees` AS `Employees` WHERE (`Employees`.`deletedDate` IS NULL AND (`Employees`.`status` = 'employee' AND `Employees`.`employeeId` = 'CCCEMP0018')) LIMIT 1;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND (`EmployeeAppLogs`.`requestType` = 'contact' AND `EmployeeAppLogs`.`requestStatus` = 'PENDING' AND `EmployeeAppLogs`.`employeeId` = 18)) LIMIT 1;
Executing (default): UPDATE `EmployeeAppLogs` SET `requestType`=?,`employeeId`=?,`appVersion`=?,`appOS`=?,`requestData`=?,`requestDate`=?,`requestStatus`=?,`requestBy`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (809e9286-88fd-4874-b7d1-a2f3b2d02715): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (809e9286-88fd-4874-b7d1-a2f3b2d02715): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SequelizeMeta' AND TABLE_SCHEMA = 'HRMS'
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 1 AND `UserPermissions`.`update` = true AND `userModule`.`moduleKey` LIKE 'dataChangeRequest')) LIMIT 1;
Executing (0f2f8421-256b-462b-b6ea-cdfcc48be98b): START TRANSACTION;
Executing (default): SELECT `id`, `requestDate`, `requestType`, `requestData`, `requestBy`, `requestStatus`, `employeeId`, `appVersion`, `appOS`, `statusUpdatedBy`, `statusUpdatedById`, `note`, `statusupdatedDate`, `isVisible`, `createdDate`, `updatedDate`, `deletedDate` FROM `EmployeeAppLogs` AS `EmployeeAppLogs` WHERE (`EmployeeAppLogs`.`deletedDate` IS NULL AND `EmployeeAppLogs`.`id` = '892');
Executing (0f2f8421-256b-462b-b6ea-cdfcc48be98b): UPDATE `EmployeeAppLogs` SET `requestStatus`=?,`statusUpdatedBy`=?,`statusUpdatedById`=?,`note`=?,`statusupdatedDate`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `id` = ?)
Executing (default): UPDATE `EmployeeContactDetails` SET `skype`=?,`updatedDate`=? WHERE (`deletedDate` IS NULL AND `employeeId` = ?)
Executing (0f2f8421-256b-462b-b6ea-cdfcc48be98b): COMMIT;
Executing (default): SELECT `Employees`.`id`, `Employees`.`firstName`, `Employees`.`lastName`, `Employees`.`dateOfBirth`, `Employees`.`employeeImage`, `Employees`.`maritalStatus`, `Employees`.`bloodGroup`, `Employees`.`employeeId`, `Employees`.`status`, `contact`.`id` AS `contact.id`, `contact`.`contactNumber` AS `contact.contactNumber`, `contact`.`skype` AS `contact.skype`, `contact`.`linkedIn` AS `contact.linkedIn`, `address`.`id` AS `address.id`, `address`.`presentStreetLine1` AS `address.presentStreetLine1`, `address`.`presentStreetLine2` AS `address.presentStreetLine2`, `address`.`presentCountry` AS `address.presentCountry`, `address`.`presentState` AS `address.presentState`, `address`.`presentArea` AS `address.presentArea`, `address`.`presentCity` AS `address.presentCity`, `address`.`presentZipCode` AS `address.presentZipCode`, `departments`.`id` AS `departments.id`, `departments->department`.`id` AS `departments.department.id`, `departments->department`.`title` AS `departments.department.title`, `emails`.`id` AS `emails.id`, `emails`.`type` AS `emails.type`, `emails`.`email` AS `emails.email`, `workDetails`.`id` AS `workDetails.id`, `workDetails`.`productionDate` AS `workDetails.productionDate`, `workDetails`.`designationId` AS `workDetails.designationId`, `workDetails`.`teamLead` AS `workDetails.teamLead`, `workDetails`.`projectManager` AS `workDetails.projectManager`, `workDetails->technologies`.`id` AS `workDetails.technologies.id`, `workDetails->technologies->technology`.`id` AS `workDetails.technologies.technology.id`, `workDetails->technologies->technology`.`title` AS `workDetails.technologies.technology.title`, `workDetails->teamLeadName`.`id` AS `workDetails.teamLeadName.id`, `workDetails->teamLeadName`.`employeeId` AS `workDetails.teamLeadName.employeeId`, `workDetails->projectManagerName`.`id` AS `workDetails.projectManagerName.id`, `workDetails->projectManagerName`.`employeeId` AS `workDetails.projectManagerName.employeeId`, `additionalCourse`.`id` AS `additionalCourse.id`, `additionalCourse`.`courseName` AS `additionalCourse.courseName`, `additionalCourse`.`instituteName` AS `additionalCourse.instituteName`, `additionalCourse`.`certificateUrl` AS `additionalCourse.certificateUrl`, `additionalCourse`.`employeeId` AS `additionalCourse.employeeId`, `additionalCourse`.`certificateFile` AS `additionalCourse.certificateFile`, `additionalCourse`.`createdDate` AS `additionalCourse.createdDate`, `additionalCourse`.`updatedDate` AS `additionalCourse.updatedDate`, `additionalCourse`.`deletedDate` AS `additionalCourse.deletedDate`, `additionalCourse->technologies`.`id` AS `additionalCourse.technologies.id`, `additionalCourse->technologies->technology`.`id` AS `additionalCourse.technologies.technology.id`, `additionalCourse->technologies->technology`.`title` AS `additionalCourse.technologies.technology.title`, `education`.`id` AS `education.id`, `education`.`educationTypeId` AS `education.educationTypeId`, `education`.`courseId` AS `education.courseId`, `education`.`courseName` AS `education.courseName`, `education`.`instituteName` AS `education.instituteName`, `education`.`instituteId` AS `education.instituteId`, `education`.`percentage` AS `education.percentage`, `education`.`passingYear` AS `education.passingYear`, `education`.`employeeId` AS `education.employeeId`, `education`.`createdDate` AS `education.createdDate`, `education`.`updatedDate` AS `education.updatedDate`, `education`.`deletedDate` AS `education.deletedDate`, `education->educationtype`.`id` AS `education.educationtype.id`, `education->educationtype`.`title` AS `education.educationtype.title`, `education->course`.`id` AS `education.course.id`, `education->course`.`title` AS `education.course.title`, `education->institute`.`id` AS `education.institute.id`, `education->institute`.`collegeName` AS `education.institute.collegeName`, `role`.`id` AS `role.id`, `role`.`role` AS `role.role` FROM `Employees` AS `Employees` LEFT OUTER JOIN `EmployeeContactDetails` AS `contact` ON `Employees`.`id` = `contact`.`employeeId` AND (`contact`.`deletedDate` IS NULL) LEFT OUTER JOIN `EmployeeAddresses` AS `address` ON `Employees`.`id` = `address`.`employeeId` AND (`address`.`deletedDate` IS NULL) LEFT OUTER JOIN `EmployeeDepartments` AS `departments` ON `Employees`.`id` = `departments`.`employeeId` AND (`departments`.`deletedDate` IS NULL) LEFT OUTER JOIN `DepartmentMaster` AS `departments->department` ON `departments`.`departmentId` = `departments->department`.`id` AND (`departments->department`.`deletedDate` IS NULL) LEFT OUTER JOIN `EmployeeEmails` AS `emails` ON `Employees`.`id` = `emails`.`employeeId` AND (`emails`.`deletedDate` IS NULL) LEFT OUTER JOIN `EmployeeWorkDetails` AS `workDetails` ON `Employees`.`id` = `workDetails`.`employeeId` AND (`workDetails`.`deletedDate` IS NULL) LEFT OUTER JOIN `EmployeeWorkTechnologies` AS `workDetails->technologies` ON `workDetails`.`id` = `workDetails->technologies`.`employeeWorkId` AND (`workDetails->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `workDetails->technologies->technology` ON `workDetails->technologies`.`technologyId` = `workDetails->technologies->technology`.`id` AND (`workDetails->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `Employees` AS `workDetails->teamLeadName` ON `workDetails`.`teamLead` = `workDetails->teamLeadName`.`id` AND (`workDetails->teamLeadName`.`deletedDate` IS NULL) LEFT OUTER JOIN `Employees` AS `workDetails->projectManagerName` ON `workDetails`.`projectManager` = `workDetails->projectManagerName`.`id` AND (`workDetails->projectManagerName`.`deletedDate` IS NULL) LEFT OUTER JOIN `EmployeeAdditionalCourses` AS `additionalCourse` ON `Employees`.`id` = `additionalCourse`.`employeeId` AND (`additionalCourse`.`deletedDate` IS NULL) LEFT OUTER JOIN `EmployeeAdditionalCourseSkills` AS `additionalCourse->technologies` ON `additionalCourse`.`id` = `additionalCourse->technologies`.`additionalCourseId` AND (`additionalCourse->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `SkillMaster` AS `additionalCourse->technologies->technology` ON `additionalCourse->technologies`.`technologyId` = `additionalCourse->technologies->technology`.`id` AND (`additionalCourse->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `EmployeeEducations` AS `education` ON `Employees`.`id` = `education`.`employeeId` AND (`education`.`deletedDate` IS NULL) LEFT OUTER JOIN `EducationTypeMaster` AS `education->educationtype` ON `education`.`educationTypeId` = `education->educationtype`.`id` AND (`education->educationtype`.`deletedDate` IS NULL) LEFT OUTER JOIN `CourseMaster` AS `education->course` ON `education`.`courseId` = `education->course`.`id` AND (`education->course`.`deletedDate` IS NULL) LEFT OUTER JOIN `CollegeMaster` AS `education->institute` ON `education`.`instituteId` = `education->institute`.`id` AND (`education->institute`.`deletedDate` IS NULL) LEFT OUTER JOIN `UserRoles` AS `role` ON `Employees`.`roleId` = `role`.`id` AND (`role`.`deletedDate` IS NULL) WHERE (`Employees`.`deletedDate` IS NULL AND `Employees`.`id` = 18);
Executing (default): SELECT `title` FROM `DesignationMaster` AS `DesignationMaster` WHERE (`DesignationMaster`.`deletedDate` IS NULL AND `DesignationMaster`.`id` = 2);
