Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`totalExperience`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`totalExperience`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`totalExperience`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`totalExperience`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`totalExperience`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`totalExperience`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Not overriding built-in method from model attribute: update
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SELECT `UserPermissions`.`id`, `UserPermissions`.`view`, `UserPermissions`.`create`, `UserPermissions`.`update`, `UserPermissions`.`delete`, `UserPermissions`.`moduleId`, `UserPermissions`.`roleId`, `UserPermissions`.`createdDate`, `UserPermissions`.`updatedDate`, `UserPermissions`.`deletedDate`, `userModule`.`id` AS `userModule.id`, `userModule`.`moduleKey` AS `userModule.moduleKey` FROM `UserPermissions` AS `UserPermissions` LEFT OUTER JOIN `UserModules` AS `userModule` ON `UserPermissions`.`moduleId` = `userModule`.`id` AND (`userModule`.`deletedDate` IS NULL) WHERE (`UserPermissions`.`deletedDate` IS NULL AND (`UserPermissions`.`roleId` = 3 AND `UserPermissions`.`view` = true AND `userModule`.`moduleKey` LIKE 'candidates')) LIMIT 1;
Executing (default): SELECT count(DISTINCT(`Candidates`.`id`)) AS `count` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`totalExperience`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`futureDate` AS `activity.futureDate`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity`.`candidateStateId` AS `activity.candidateStateId`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`appliedDate` AS `activity.appliedDate`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE `Candidates`.`deletedDate` IS NULL GROUP BY `id` ORDER BY `Candidates`.`id` ASC LIMIT 0, 20;
Executing (default): SELECT `Candidates`.`id`, `Candidates`.`firstName`, `Candidates`.`lastName`, `Candidates`.`wishlist`, `Candidates`.`contactNumber`, `Candidates`.`email`, `Candidates`.`totalExperience`, `Candidates`.`technologies`, `Candidates`.`employeeId`, `interviewSchedule`.`id` AS `interviewSchedule.id`, `experience`.`id` AS `experience.id`, `experience`.`companyId` AS `experience.companyId`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience->company`.`id` AS `experience.company.id`, `experience->company`.`name` AS `experience.company.name`, `experience->technologies`.`id` AS `experience.technologies.id`, `experience->technologies`.`technologyId` AS `experience.technologies.technologyId`, `experience->technologies->technology`.`id` AS `experience.technologies.technology.id`, `experience->technologies->technology`.`title` AS `experience.technologies.technology.title`, `activity`.`id` AS `activity.id`, `activity`.`candidateStatusId` AS `activity.candidateStatusId`, `activity->candidateStatus`.`id` AS `activity.candidateStatus.id`, `activity->candidateStatus`.`name` AS `activity.candidateStatus.name`, `activity->candidateState`.`id` AS `activity.candidateState.id`, `activity->candidateState`.`name` AS `activity.candidateState.name` FROM `Candidates` AS `Candidates` LEFT OUTER JOIN `InterviewSchedules` AS `interviewSchedule` ON `Candidates`.`id` = `interviewSchedule`.`candidateId` AND (`interviewSchedule`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExperiences` AS `experience` ON `Candidates`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `CompanyMaster` AS `experience->company` ON `experience`.`companyId` = `experience->company`.`id` AND (`experience->company`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateExpTechnologies` AS `experience->technologies` ON `experience`.`id` = `experience->technologies`.`candidateExperienceId` AND (`experience->technologies`.`deletedDate` IS NULL) LEFT OUTER JOIN `TechnologyMaster` AS `experience->technologies->technology` ON `experience->technologies`.`technologyId` = `experience->technologies->technology`.`id` AND (`experience->technologies->technology`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateActivities` AS `activity` ON `Candidates`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateStatus` AS `activity->candidateStatus` ON `activity`.`candidateStatusId` = `activity->candidateStatus`.`id` AND (`activity->candidateStatus`.`deletedDate` IS NULL) LEFT OUTER JOIN `CandidateState` AS `activity->candidateState` ON `activity`.`candidateStateId` = `activity->candidateState`.`id` AND (`activity->candidateState`.`deletedDate` IS NULL) WHERE (`Candidates`.`deletedDate` IS NULL AND `Candidates`.`id` IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)) ORDER BY `Candidates`.`id` ASC;
