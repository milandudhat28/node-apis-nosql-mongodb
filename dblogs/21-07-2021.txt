Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT `Candidate`.`id`, `Candidate`.`firstName`, `Candidate`.`middleName`, `Candidate`.`lastName`, `Candidate`.`dateOfBirth`, `Candidate`.`gender`, `Candidate`.`maritalStatus`, `Candidate`.`candidateImage`, `Candidate`.`referedBy`, `Candidate`.`wishlist`, `Candidate`.`createdDate`, `Candidate`.`updatedDate`, `Candidate`.`deletedDate`, `contact`.`id` AS `contact.id`, `contact`.`contactNumber` AS `contact.contactNumber`, `contact`.`alternateContactNumber` AS `contact.alternateContactNumber`, `contact`.`email` AS `contact.email`, `contact`.`skype` AS `contact.skype`, `contact`.`linkedln` AS `contact.linkedln`, `contact`.`candidateId` AS `contact.candidateId`, `contact`.`createdDate` AS `contact.createdDate`, `contact`.`updatedDate` AS `contact.updatedDate`, `contact`.`deletedDate` AS `contact.deletedDate`, `education`.`id` AS `education.id`, `education`.`educationType` AS `education.educationType`, `education`.`course` AS `education.course`, `education`.`instituteName` AS `education.instituteName`, `education`.`cgpaPercentage` AS `education.cgpaPercentage`, `education`.`passingYear` AS `education.passingYear`, `education`.`candidateId` AS `education.candidateId`, `education`.`createdDate` AS `education.createdDate`, `education`.`updatedDate` AS `education.updatedDate`, `education`.`deletedDate` AS `education.deletedDate`, `ssc`.`id` AS `ssc.id`, `ssc`.`schoolName` AS `ssc.schoolName`, `ssc`.`percentage` AS `ssc.percentage`, `ssc`.`passingYear` AS `ssc.passingYear`, `ssc`.`candidateId` AS `ssc.candidateId`, `ssc`.`createdDate` AS `ssc.createdDate`, `ssc`.`updatedDate` AS `ssc.updatedDate`, `ssc`.`deletedDate` AS `ssc.deletedDate`, `course`.`id` AS `course.id`, `course`.`courseName` AS `course.courseName`, `course`.`institute` AS `course.institute`, `course`.`certificateUrl` AS `course.certificateUrl`, `course`.`skills` AS `course.skills`, `course`.`candidateId` AS `course.candidateId`, `course`.`createdDate` AS `course.createdDate`, `course`.`updatedDate` AS `course.updatedDate`, `course`.`deletedDate` AS `course.deletedDate`, `experience`.`id` AS `experience.id`, `experience`.`companyName` AS `experience.companyName`, `experience`.`designation` AS `experience.designation`, `experience`.`technology` AS `experience.technology`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`teamLead` AS `experience.teamLead`, `experience`.`projectManager` AS `experience.projectManager`, `experience`.`reasonForJobChange` AS `experience.reasonForJobChange`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience`.`candidateId` AS `experience.candidateId`, `experience`.`createdDate` AS `experience.createdDate`, `experience`.`updatedDate` AS `experience.updatedDate`, `experience`.`deletedDate` AS `experience.deletedDate`, `salary`.`id` AS `salary.id`, `salary`.`lastIncrementDate` AS `salary.lastIncrementDate`, `salary`.`currentCtc` AS `salary.currentCtc`, `salary`.`status` AS `salary.status`, `salary`.`salaryBeforeIncrement` AS `salary.salaryBeforeIncrement`, `salary`.`expectedCtc` AS `salary.expectedCtc`, `salary`.`addNoticePeriod` AS `salary.addNoticePeriod`, `salary`.`reasonForProfessionalGap` AS `salary.reasonForProfessionalGap`, `salary`.`candidateId` AS `salary.candidateId`, `salary`.`createdDate` AS `salary.createdDate`, `salary`.`updatedDate` AS `salary.updatedDate`, `salary`.`deletedDate` AS `salary.deletedDate`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`approachBy` AS `activity.approachBy`, `activity`.`status` AS `activity.status`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate` FROM `Candidates` AS `Candidate` LEFT OUTER JOIN `Contacts` AS `contact` ON `Candidate`.`id` = `contact`.`candidateId` AND (`contact`.`deletedDate` IS NULL) LEFT OUTER JOIN `Education` AS `education` ON `Candidate`.`id` = `education`.`candidateId` AND (`education`.`deletedDate` IS NULL) LEFT OUTER JOIN `Sscs` AS `ssc` ON `Candidate`.`id` = `ssc`.`candidateId` AND (`ssc`.`deletedDate` IS NULL) LEFT OUTER JOIN `Courses` AS `course` ON `Candidate`.`id` = `course`.`candidateId` AND (`course`.`deletedDate` IS NULL) LEFT OUTER JOIN `Experiences` AS `experience` ON `Candidate`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `Salaries` AS `salary` ON `Candidate`.`id` = `salary`.`candidateId` AND (`salary`.`deletedDate` IS NULL) LEFT OUTER JOIN `Activities` AS `activity` ON `Candidate`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) WHERE (`Candidate`.`deletedDate` IS NULL AND `Candidate`.`id` = '100');
Executing (default): SELECT `Candidate`.`id`, `Candidate`.`firstName`, `Candidate`.`middleName`, `Candidate`.`lastName`, `Candidate`.`dateOfBirth`, `Candidate`.`gender`, `Candidate`.`maritalStatus`, `Candidate`.`candidateImage`, `Candidate`.`referedBy`, `Candidate`.`wishlist`, `Candidate`.`createdDate`, `Candidate`.`updatedDate`, `Candidate`.`deletedDate`, `contact`.`id` AS `contact.id`, `contact`.`contactNumber` AS `contact.contactNumber`, `contact`.`alternateContactNumber` AS `contact.alternateContactNumber`, `contact`.`email` AS `contact.email`, `contact`.`skype` AS `contact.skype`, `contact`.`linkedln` AS `contact.linkedln`, `contact`.`candidateId` AS `contact.candidateId`, `contact`.`createdDate` AS `contact.createdDate`, `contact`.`updatedDate` AS `contact.updatedDate`, `contact`.`deletedDate` AS `contact.deletedDate`, `education`.`id` AS `education.id`, `education`.`educationType` AS `education.educationType`, `education`.`course` AS `education.course`, `education`.`instituteName` AS `education.instituteName`, `education`.`cgpaPercentage` AS `education.cgpaPercentage`, `education`.`passingYear` AS `education.passingYear`, `education`.`candidateId` AS `education.candidateId`, `education`.`createdDate` AS `education.createdDate`, `education`.`updatedDate` AS `education.updatedDate`, `education`.`deletedDate` AS `education.deletedDate`, `ssc`.`id` AS `ssc.id`, `ssc`.`schoolName` AS `ssc.schoolName`, `ssc`.`percentage` AS `ssc.percentage`, `ssc`.`passingYear` AS `ssc.passingYear`, `ssc`.`candidateId` AS `ssc.candidateId`, `ssc`.`createdDate` AS `ssc.createdDate`, `ssc`.`updatedDate` AS `ssc.updatedDate`, `ssc`.`deletedDate` AS `ssc.deletedDate`, `course`.`id` AS `course.id`, `course`.`courseName` AS `course.courseName`, `course`.`institute` AS `course.institute`, `course`.`certificateUrl` AS `course.certificateUrl`, `course`.`skills` AS `course.skills`, `course`.`candidateId` AS `course.candidateId`, `course`.`createdDate` AS `course.createdDate`, `course`.`updatedDate` AS `course.updatedDate`, `course`.`deletedDate` AS `course.deletedDate`, `experience`.`id` AS `experience.id`, `experience`.`companyName` AS `experience.companyName`, `experience`.`designation` AS `experience.designation`, `experience`.`technology` AS `experience.technology`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`teamLead` AS `experience.teamLead`, `experience`.`projectManager` AS `experience.projectManager`, `experience`.`reasonForJobChange` AS `experience.reasonForJobChange`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience`.`candidateId` AS `experience.candidateId`, `experience`.`createdDate` AS `experience.createdDate`, `experience`.`updatedDate` AS `experience.updatedDate`, `experience`.`deletedDate` AS `experience.deletedDate`, `salary`.`id` AS `salary.id`, `salary`.`lastIncrementDate` AS `salary.lastIncrementDate`, `salary`.`currentCtc` AS `salary.currentCtc`, `salary`.`status` AS `salary.status`, `salary`.`salaryBeforeIncrement` AS `salary.salaryBeforeIncrement`, `salary`.`expectedCtc` AS `salary.expectedCtc`, `salary`.`addNoticePeriod` AS `salary.addNoticePeriod`, `salary`.`reasonForProfessionalGap` AS `salary.reasonForProfessionalGap`, `salary`.`candidateId` AS `salary.candidateId`, `salary`.`createdDate` AS `salary.createdDate`, `salary`.`updatedDate` AS `salary.updatedDate`, `salary`.`deletedDate` AS `salary.deletedDate`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`approachBy` AS `activity.approachBy`, `activity`.`status` AS `activity.status`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate` FROM `Candidates` AS `Candidate` LEFT OUTER JOIN `Contacts` AS `contact` ON `Candidate`.`id` = `contact`.`candidateId` AND (`contact`.`deletedDate` IS NULL) LEFT OUTER JOIN `Education` AS `education` ON `Candidate`.`id` = `education`.`candidateId` AND (`education`.`deletedDate` IS NULL) LEFT OUTER JOIN `Sscs` AS `ssc` ON `Candidate`.`id` = `ssc`.`candidateId` AND (`ssc`.`deletedDate` IS NULL) LEFT OUTER JOIN `Courses` AS `course` ON `Candidate`.`id` = `course`.`candidateId` AND (`course`.`deletedDate` IS NULL) LEFT OUTER JOIN `Experiences` AS `experience` ON `Candidate`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `Salaries` AS `salary` ON `Candidate`.`id` = `salary`.`candidateId` AND (`salary`.`deletedDate` IS NULL) LEFT OUTER JOIN `Activities` AS `activity` ON `Candidate`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) WHERE (`Candidate`.`deletedDate` IS NULL AND `Candidate`.`id` = '1');
Executing (default): SELECT `Candidate`.`id`, `Candidate`.`firstName`, `Candidate`.`middleName`, `Candidate`.`lastName`, `Candidate`.`dateOfBirth`, `Candidate`.`gender`, `Candidate`.`maritalStatus`, `Candidate`.`candidateImage`, `Candidate`.`referedBy`, `Candidate`.`wishlist`, `Candidate`.`createdDate`, `Candidate`.`updatedDate`, `Candidate`.`deletedDate`, `contact`.`id` AS `contact.id`, `contact`.`contactNumber` AS `contact.contactNumber`, `contact`.`alternateContactNumber` AS `contact.alternateContactNumber`, `contact`.`email` AS `contact.email`, `contact`.`skype` AS `contact.skype`, `contact`.`linkedln` AS `contact.linkedln`, `contact`.`candidateId` AS `contact.candidateId`, `contact`.`createdDate` AS `contact.createdDate`, `contact`.`updatedDate` AS `contact.updatedDate`, `contact`.`deletedDate` AS `contact.deletedDate`, `education`.`id` AS `education.id`, `education`.`educationType` AS `education.educationType`, `education`.`course` AS `education.course`, `education`.`instituteName` AS `education.instituteName`, `education`.`cgpaPercentage` AS `education.cgpaPercentage`, `education`.`passingYear` AS `education.passingYear`, `education`.`candidateId` AS `education.candidateId`, `education`.`createdDate` AS `education.createdDate`, `education`.`updatedDate` AS `education.updatedDate`, `education`.`deletedDate` AS `education.deletedDate`, `ssc`.`id` AS `ssc.id`, `ssc`.`schoolName` AS `ssc.schoolName`, `ssc`.`percentage` AS `ssc.percentage`, `ssc`.`passingYear` AS `ssc.passingYear`, `ssc`.`candidateId` AS `ssc.candidateId`, `ssc`.`createdDate` AS `ssc.createdDate`, `ssc`.`updatedDate` AS `ssc.updatedDate`, `ssc`.`deletedDate` AS `ssc.deletedDate`, `course`.`id` AS `course.id`, `course`.`courseName` AS `course.courseName`, `course`.`institute` AS `course.institute`, `course`.`certificateUrl` AS `course.certificateUrl`, `course`.`skills` AS `course.skills`, `course`.`candidateId` AS `course.candidateId`, `course`.`createdDate` AS `course.createdDate`, `course`.`updatedDate` AS `course.updatedDate`, `course`.`deletedDate` AS `course.deletedDate`, `experience`.`id` AS `experience.id`, `experience`.`companyName` AS `experience.companyName`, `experience`.`designation` AS `experience.designation`, `experience`.`technology` AS `experience.technology`, `experience`.`from` AS `experience.from`, `experience`.`to` AS `experience.to`, `experience`.`teamLead` AS `experience.teamLead`, `experience`.`projectManager` AS `experience.projectManager`, `experience`.`reasonForJobChange` AS `experience.reasonForJobChange`, `experience`.`totalExperience` AS `experience.totalExperience`, `experience`.`candidateId` AS `experience.candidateId`, `experience`.`createdDate` AS `experience.createdDate`, `experience`.`updatedDate` AS `experience.updatedDate`, `experience`.`deletedDate` AS `experience.deletedDate`, `salary`.`id` AS `salary.id`, `salary`.`lastIncrementDate` AS `salary.lastIncrementDate`, `salary`.`currentCtc` AS `salary.currentCtc`, `salary`.`status` AS `salary.status`, `salary`.`salaryBeforeIncrement` AS `salary.salaryBeforeIncrement`, `salary`.`expectedCtc` AS `salary.expectedCtc`, `salary`.`addNoticePeriod` AS `salary.addNoticePeriod`, `salary`.`reasonForProfessionalGap` AS `salary.reasonForProfessionalGap`, `salary`.`candidateId` AS `salary.candidateId`, `salary`.`createdDate` AS `salary.createdDate`, `salary`.`updatedDate` AS `salary.updatedDate`, `salary`.`deletedDate` AS `salary.deletedDate`, `activity`.`id` AS `activity.id`, `activity`.`approachDate` AS `activity.approachDate`, `activity`.`approachBy` AS `activity.approachBy`, `activity`.`status` AS `activity.status`, `activity`.`note` AS `activity.note`, `activity`.`candidateId` AS `activity.candidateId`, `activity`.`createdDate` AS `activity.createdDate`, `activity`.`updatedDate` AS `activity.updatedDate`, `activity`.`deletedDate` AS `activity.deletedDate` FROM `Candidates` AS `Candidate` LEFT OUTER JOIN `Contacts` AS `contact` ON `Candidate`.`id` = `contact`.`candidateId` AND (`contact`.`deletedDate` IS NULL) LEFT OUTER JOIN `Education` AS `education` ON `Candidate`.`id` = `education`.`candidateId` AND (`education`.`deletedDate` IS NULL) LEFT OUTER JOIN `Sscs` AS `ssc` ON `Candidate`.`id` = `ssc`.`candidateId` AND (`ssc`.`deletedDate` IS NULL) LEFT OUTER JOIN `Courses` AS `course` ON `Candidate`.`id` = `course`.`candidateId` AND (`course`.`deletedDate` IS NULL) LEFT OUTER JOIN `Experiences` AS `experience` ON `Candidate`.`id` = `experience`.`candidateId` AND (`experience`.`deletedDate` IS NULL) LEFT OUTER JOIN `Salaries` AS `salary` ON `Candidate`.`id` = `salary`.`candidateId` AND (`salary`.`deletedDate` IS NULL) LEFT OUTER JOIN `Activities` AS `activity` ON `Candidate`.`id` = `activity`.`candidateId` AND (`activity`.`deletedDate` IS NULL) WHERE (`Candidate`.`deletedDate` IS NULL);
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
