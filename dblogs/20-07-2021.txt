Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT count(*) AS `count` FROM `Candidates` AS `Candidate` WHERE (`Candidate`.`deletedDate` IS NULL AND `Candidate`.`id` = '14');
Executing (default): UPDATE `Candidates` SET `deletedDate`=? WHERE `deletedDate` IS NULL AND `id` = ?
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT count(*) AS `count` FROM `Candidates` AS `Candidate` WHERE (`Candidate`.`deletedDate` IS NULL AND `Candidate`.`id` = '13');
Executing (default): UPDATE `Candidates` SET `deletedDate`=? WHERE `deletedDate` IS NULL AND `id` = ?
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT count(*) AS `count` FROM `Candidates` AS `Candidate` WHERE (`Candidate`.`deletedDate` IS NULL AND `Candidate`.`id` = '12');
Executing (default): SELECT count(*) AS `count` FROM `Candidates` AS `Candidate` WHERE (`Candidate`.`deletedDate` IS NULL AND `Candidate`.`id` = '11');
Executing (default): UPDATE `Candidates` SET `deletedDate`=? WHERE `deletedDate` IS NULL AND `id` = ?
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT 1+1 AS result
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE , PRIMARY KEY (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci;
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): SHOW INDEX FROM `SequelizeMeta`
Executing (default): CREATE TABLE IF NOT EXISTS `Candidates` (`id` INTEGER NOT NULL auto_increment , `firstName` VARCHAR(255), `middleName` VARCHAR(255), `lastName` VARCHAR(255), `dateOfBirth` DATETIME, `gender` VARCHAR(255), `maritalStatus` VARCHAR(255), `candidateImage` VARCHAR(255), `referedBy` VARCHAR(255), `wishlist` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
Executing (default): SHOW INDEX FROM `Candidates`
Executing (default): CREATE TABLE IF NOT EXISTS `Activities` (`id` INTEGER NOT NULL auto_increment , `approachDate` DATETIME, `approachBy` VARCHAR(255), `status` VARCHAR(255), `note` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Activities`
Executing (default): CREATE TABLE IF NOT EXISTS `activityStatusMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `activityStatusMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `BloodGroupMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `BloodGroupMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `CompanyMasters` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `website` VARCHAR(255), `noOfEmployees` INTEGER, `contactNumber` VARCHAR(255), `contactEmail` VARCHAR(255), `streetLine1` VARCHAR(255), `streetLine2` VARCHAR(255), `area` VARCHAR(255), `city` VARCHAR(255), `postalCode` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `appraisalCycle` VARCHAR(255), `noticePeriod` INTEGER, `bondDurationForExperienced` INTEGER, `bondDurationForFreshers` INTEGER, `weekends` VARCHAR(255), `notes` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CompanyMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Contacts` (`id` INTEGER NOT NULL auto_increment , `contactNumber` VARCHAR(255), `alternateContactNumber` VARCHAR(255), `email` VARCHAR(255), `skype` VARCHAR(255), `linkedln` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Contacts`
Executing (default): CREATE TABLE IF NOT EXISTS `Courses` (`id` INTEGER NOT NULL auto_increment , `courseName` VARCHAR(255), `institute` VARCHAR(255), `certificateUrl` VARCHAR(255), `skills` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Courses`
Executing (default): CREATE TABLE IF NOT EXISTS `CourseMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `CourseMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DepartmentMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DepartmentMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `DesignationMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) UNIQUE, `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `DesignationMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Education` (`id` INTEGER NOT NULL auto_increment , `educationType` VARCHAR(255), `course` VARCHAR(255), `instituteName` VARCHAR(255), `cgpaPercentage` VARCHAR(255), `passingYear` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Education`
Executing (default): CREATE TABLE IF NOT EXISTS `EducationTypeMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1) DEFAULT true, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `EducationTypeMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Experiences` (`id` INTEGER NOT NULL auto_increment , `companyName` VARCHAR(255), `designation` VARCHAR(255), `technology` VARCHAR(255), `from` DATETIME, `to` DATETIME, `teamLead` VARCHAR(255), `projectManager` VARCHAR(255), `reasonForJobChange` VARCHAR(255), `totalExperience` INTEGER, `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Experiences`
Executing (default): CREATE TABLE IF NOT EXISTS `JobChangeReasonMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255), `isActive` TINYINT(1), `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `JobChangeReasonMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `POMasters` (`id` INTEGER NOT NULL auto_increment , `area` VARCHAR(255), `state` VARCHAR(255), `city` VARCHAR(255), `country` VARCHAR(255), `postalCode` VARCHAR(255), `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `POMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Salaries` (`id` INTEGER NOT NULL auto_increment , `lastIncrementDate` DATETIME, `currentCtc` INTEGER, `status` VARCHAR(255), `salaryBeforeIncrement` INTEGER, `expectedCtc` INTEGER, `addNoticePeriod` INTEGER, `reasonForProfessionalGap` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Salaries`
Executing (default): CREATE TABLE IF NOT EXISTS `SkillMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SkillMasters`
Executing (default): CREATE TABLE IF NOT EXISTS `Sscs` (`id` INTEGER NOT NULL auto_increment , `schoolName` VARCHAR(255), `percentage` VARCHAR(255), `passingYear` VARCHAR(255), `candidateId` INTEGER, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, `deletedDate` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`candidateId`) REFERENCES `Candidates` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `Sscs`
Executing (default): CREATE TABLE IF NOT EXISTS `TechnologyMasters` (`id` INTEGER NOT NULL auto_increment , `title` VARCHAR(255) NOT NULL, `parentId` INTEGER, `isActive` TINYINT(1), `deletedDate` DATETIME, `createdDate` DATETIME NOT NULL, `updatedDate` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `TechnologyMasters`
Executing (default): SELECT count(*) AS `count` FROM `Candidates` AS `Candidate` WHERE (`Candidate`.`deletedDate` IS NULL AND `Candidate`.`id` = '10');
Executing (default): UPDATE `Candidates` SET `deletedDate`=? WHERE `deletedDate` IS NULL AND `id` = ?
